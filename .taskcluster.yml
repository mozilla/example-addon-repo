version: 0
allowPullRequests: public
metadata:
  name: Example Add-on
  description: Example Add-on CI Tasks
  owner: "{{ event.head.user.email }}"
  source: "{{ event.head.repo.url }}"
tasks:
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    metadata:
      name: Example Add-on Lint Tests
      description: Example Add-on Lint Tests
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    payload:
      maxRunTime: 1200
      image: "standard8/example-addon-repo-lint:2016101001.7be6b348c431"
      command:
        - "/bin/bash"
        - "-lc"
        - "git clone {{event.head.repo.url}} repo && cd repo && git checkout {{event.head.repo.branch}} && npm install && npm run lint"
    extra:
      github:
        env: true
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
      treeherder:
        jobKind: "test"
        machine:
          platform: "lint"
        symbol: "ES"
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    metadata:
      name: Example Add-on Unit Tests
      description: Example Add-on Unit Tests
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    # Note: If you get an error such as "You didn't give the task-graph scopes
    # allowing it define tasks on the queue", then you need to get permissions
    #Â added for this scope. See [the taskcluster doc](docs/Taskcluster.md)
    # for more detail.
    scopes:
      - secrets:get:repo:github.com/mozilla/example-addon-repo:pull-request
    payload:
      env:
        NEED_WINDOW_MANAGER: true
      features:
        taskclusterProxy: true
      maxRunTime: 1200
      image: "standard8/example-addon-repo-functional:2017050301.82c2d17e74ef"
      command:
        # Note: post install for virtualenv is done as a separate step as currently
        # npm install is being run as root (bug 1093833). When that is fixed, we
        # should be able to merge them.
        - "/bin/bash"
        - "-lc"
        - "./bin/setup.sh && git clone {{event.head.repo.url}} repo && cd repo && git checkout {{event.head.repo.branch}} && npm install && npm run virtualenv-postinstall && npm run download && export FIREFOX_BINARY=`cat build/fflocation.txt` && COVERALLS_REPO_TOKEN=`python scripts/get_secret.py` FIREFOX_BIN=${FIREFOX_BINARY} npm run test:karma"
    extra:
      github:
        env: true
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
      treeherder:
        jobKind: "test"
        machine:
          platform: "lint"
        symbol: "ES"
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    metadata:
      name: Example Add-on Functional Tests Linux
      description: Example Add-on Functional Tests Linux
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    payload:
      env:
        NEED_WINDOW_MANAGER: true
      maxRunTime: 1200
      image: "standard8/example-addon-repo-functional:2017050301.82c2d17e74ef"
      command:
        - "/bin/bash"
        - "-lc"
        - "./bin/setup.sh && git clone {{event.head.repo.url}} repo && cd repo && git checkout {{event.head.repo.branch}} && npm install && npm run virtualenv-postinstall && npm run download && export FIREFOX_BINARY=`cat build/fflocation.txt` && npm run test:func"
    extra:
      github:
        env: true
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
      treeherder:
        jobKind: "test"
        machine:
          platform: "lint"
        symbol: "ES"
  # - provisionerId: "{{ taskcluster.docker.provisionerId }}"
  #   metadata:
  #     name: Example Add-on Functional Tests Windows
  #     description: Example Add-on Functional Tests Windows
  #     owner: "{{ event.head.user.email }}"
  #     source: "{{ event.head.repo.url }}"
  #   workerType: "win2012r2"
  #   payload:
  #     env:
  #       XPI_NAME: "dist/example_add-on-0.0.1.zip"
  #     maxRunTime: 1200
  #     command:
  #         - "git clone https://github.com/mozilla/example-addon-repo.git repo"
  #         - "cd repo"
  #         - "git checkout {{event.head.repo.branch}}"
  #         - "set PYTHON=C:\\mozilla-build\\python\\python.exe"
  #         - "echo %PATH%"
  #         - "npm install"
  #         # XXX https://github.com/mozilla/example-addon-repo/issues/18
  #         # virtualenv postinstall currently doesn't work properly on Windows,
  #         # so we have to do this with the bash lines below.
  #         # - "npm run virtualenv-postinstall"
  #         # - "npm run download"
  #         - "C:\\mozilla-build\\msys\\bin\\bash.exe -c 'virtualenv .venv'"
  #         - "C:\\mozilla-build\\msys\\bin\\bash.exe -c '.venv/Scripts/pip install -r requirements.txt'"
  #         - "C:\\mozilla-build\\msys\\bin\\bash.exe -c '.venv/Scripts/mozdownload --version=latest -d firefox-setup.exe'"
  #         - "C:\\mozilla-build\\msys\\bin\\bash.exe -c '.venv/Scripts/python scripts/install_ff.py firefox-setup.exe'"
  #         - "build\\fflocation.bat"
  #         - "npm run funcnonbash"
  #         - "npm run uninstall"
  #   extra:
  #     github:
  #       env: true
  #       events:
  #         - pull_request.opened
  #         - pull_request.synchronize
  #         - pull_request.reopened
  #         - push
  #     treeherder:
  #       jobKind: "test"
  #       machine:
  #         platform: "lint"
  #       symbol: "ES"
